Introduction
step ML-workflow

- data (streaming data)-pub/sub-dataflow-bigQuery-BI tools or AI/ML tools
- data (batch data)-pub/sub-dataflow-bigQuery-BI tools or AI/ML tools

bigQuery services : storage and analytic
data di bigquery bisa didapatkan dari :
- internal storage
- eksternal storage : cloud storage, cloud spanner, atau cloud SQL
- multi cloud : google cloud prodcut, AWS, Azure
- public dataset

data yang beragam dari berbagai source dapat diatasi dengan penggunaan dataflow sebelum dieksekusi di bigquery

bigquery ML
services bigQuery untuk ML/AI lifecycle:
- kemampuan untuk membangun model ML
- fase project ML
- command ML di SQL bigquery

dua langkah untuk memulai pemodelan dengan bigquery:
- buat model dengan statement SQL
- tulis SQL prediction query dengan ml.PREDICT 

 bigQuery dapat menjalani supervised dan unsupervised model

bigQuery terdapat fitur yang disebut ML Ops, meliputu deploy, manage, dan monitor model 


the goal is : to identify high-value customers and bring the customers 
to our store with special promotion and incentives

ML digunakan untuk menemukan secara otomatis setiap pola atau hubungan dalam data yang tersedia

Bigquery ML : 
- automatically one-hot-encoding untuk categorical nilai
- automatically split dataset dalam training dan evalution data

fase dalam machine learning:
1. ETL data ke dalam bigQuery
2. pilih dan lakukan proses fituring
3. membuat model di dalam bigquery
4. evalution peformance trained model
5. gunakan model untuk prediksi data baru

membuat model command dalam bigQuery
'''
CREATE MODEL
ecommerce.classification

OPTIONS
(
    model_type='logistic_reg',
    input_label_cols = ['will_buy_later']
    ls_init_learn_rate = .15
    l1_reg = 1
    max_iteration = 5
) AS training_data
'''

mengevaluasi ML MODEL
'''
SELECT
    roc_auc,
    accuracy,
    precision,
    recall
FROM
    ML.EVALUATE(MODEL `ecommerce.classification`)
'''

melakukan prediksi menggunakan model
'''
SELECT * FROM
    ML.PREDICT (MODEL `ecommerce.classification`)
'''

inspeksi ML_WEIGHTS
'''
SELECT 
    category, weight
FROM UNNEST (( 
    SELECT 
        category_weights
    FROM 
        ML.WEIGHITS(MODEL 'bracktology.ncca_model')
    WHERE
        processed_input = "seed"
))
    like 'school_ncca'
    ORDER BY weight DESC
'''

untuk membuat batch prediction
'''
CREATE OR REPLACE TABLE `bracktology.prediction` AS (
    SELECT * FROM ML.PREDICT (MODEL `bracktology.ncca_model`,
    # prediksi data untuk tahun 2018 (tahun tertentu)
    (SELECT * FROM `data-to-insight.ncca.2018_tournament_results`)
    )
)
'''

- untuk menentukan kolom label, tulis nama kolom sebagai 'label' atau spefikasi dengan options 'input_label_cols'
- kolom data yang digunakan adalah kolom yang tetulis setelah SELECT command.
'''
SELECT * FROM ML.FEATURE_INFO(MODEL `mydataset.mymodel`)
'''

membuat model
'''
CREATE OR REPLACE MODEL <dataset>.<name>
OPTIONS(model_type='<>') AS 
<training datasets>
'''

untuk melihat progress training
'''
SELECT * FROM ML.TRAINING_INFO(MODEL `mydataset.mymodel`)
'''

untuk melihat wieght atau bobot kolom atau fitur yang berpengaruh terhadap label kolom
'''
SELECT * FROM ML.WEIGHITS(MODEL `mydataset.mymodel`, (<query>))
'''

untuk evaluasi
'''
SELECT * FROM ML.EVALUATE(MODEL `mydataset.mymodel`, (<query>))
'''

untuk prediction
'''
SELECT * FROM ML.PREDICT(MODEL `mydataset.mymodel`, (<query>))
'''